{"version":3,"file":"static/js/95.4b2807b7.chunk.js","mappings":"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","sources":["components/ComparisonSection.tsx","components/ControlledProps/ContextProvider.ts","components/ControlledProps/AddedClap.tsx","components/ControlledProps/ClapAnimation.tsx","components/ControlledProps/ClapButton.tsx","components/ControlledProps/TotalClap.tsx","components/ControlledProps/MediumClapContext.tsx","components/ControlledProps/index.tsx","components/CustomHooksContent.tsx","components/DisplayLayout.tsx","components/MultipleCustomHooks/useClapAnimation.ts","components/MultipleCustomHooks/useClapsCount.ts","components/MultipleCustomHooks/index.tsx","components/Streamers.tsx","pages/MultipleCustomHooks.tsx","../node_modules/@mui/icons-material/ThumbUp.js"],"sourcesContent":["import { FunctionComponent, ReactNode } from \"react\";\r\n\r\nimport Grid from '@mui/material/Grid';\r\nimport Typography from '@mui/material/Typography';\r\n\r\ninterface ComparisonSectionProps {\r\n    beforeComponent: ReactNode;\r\n    afterComponent: ReactNode;\r\n    beforeSourceCode: string;\r\n    afterSourceCode: string;\r\n}\r\n\r\nconst ComparisonSection: FunctionComponent<ComparisonSectionProps> = ({ beforeComponent, beforeSourceCode, afterComponent, afterSourceCode }) => (\r\n    <Grid container spacing={4}>\r\n        <Grid item>\r\n            <Typography\r\n                        onClick={() => window.open(beforeSourceCode, '_blank', 'noopener noreferrer')}\r\n                        sx={{\r\n                            color: 'aquamarine',\r\n                            fontWeight: 600,\r\n                            cursor: 'pointer',\r\n                            textDecoration: 'underline'\r\n                        }}\r\n                        variant='h5'\r\n                    >\r\n                Before 🔗\r\n            </Typography>\r\n            {beforeComponent}\r\n        </Grid>\r\n        <Grid item>\r\n            <Typography\r\n                        onClick={() => window.open(afterSourceCode, '_blank', 'noopener noreferrer')}\r\n                        sx={{\r\n                            color: '#fc90a4',\r\n                            fontWeight: 600,\r\n                            cursor: 'pointer',\r\n                            textDecoration: 'underline'\r\n                        }}\r\n                        variant='h5'\r\n                    >\r\n                After 🔗\r\n            </Typography>\r\n            {afterComponent}\r\n        </Grid>\r\n    </Grid>\r\n        )\r\n\r\nexport default ComparisonSection;","import { Lookup, SpringRef } from '@react-spring/web';\r\nimport { createContext } from 'react';\r\n\r\nexport interface MediumClapContextValue {\r\n    isHover: boolean;\r\n    addedClap: number;\r\n    totalClap: number;\r\n    streamersAnimation?: Record<string, string>;\r\n    streamersApi?: SpringRef<Lookup<unknown>>;\r\n    clapAddedAnimation?: Record<string, string>;\r\n    clapAddedApi?: SpringRef<Lookup<unknown>>;\r\n    handleAddedClap?: () => void;\r\n}\r\n\r\nexport const MediumClapContext = createContext<MediumClapContextValue>({\r\n    isHover: false,\r\n    addedClap: 0,\r\n    totalClap: 200,\r\n});\r\n","import { FunctionComponent, useContext } from 'react';\r\nimport { animated } from '@react-spring/web';\r\n\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nimport { MediumClapContext, MediumClapContextValue } from './ContextProvider';\r\n\r\nconst AddedClap: FunctionComponent = () => {\r\n    const { addedClap, clapAddedAnimation } = useContext<MediumClapContextValue>(MediumClapContext);\r\n\r\n    return (\r\n        <animated.div\r\n                    style={{\r\n                        position: 'relative',\r\n                        opacity: 0,\r\n                        ...clapAddedAnimation\r\n                    }}\r\n                >\r\n            <IconButton sx={{\r\n                        padding: '20px',\r\n                        backgroundColor: '#90caf9',\r\n                        width: '20px',\r\n                        height: '20px',\r\n                    }}>\r\n                <Typography variant=\"body2\">{`+${addedClap}`}</Typography>\r\n            </IconButton>\r\n        </animated.div>\r\n    )\r\n}\r\n\r\nexport default AddedClap;","import { FunctionComponent, useContext } from 'react';\r\n\r\nimport { animated, useSpring } from '@react-spring/web';\r\n\r\nimport { MediumClapContext, MediumClapContextValue } from './ContextProvider';\r\n\r\nimport Streamers from '../Streamers';\r\n\r\nconst ClapAnimation: FunctionComponent = () => {\r\n    const { isHover, streamersAnimation } = useContext<MediumClapContextValue>(MediumClapContext);\r\n\r\n    const boxShadowAnimation = useSpring({\r\n        from: { opacity: isHover ? 0 : 1, transition: 'ease' },\r\n        to: [{ opacity: isHover ? 1 : 0 }],\r\n        loop: isHover,\r\n        config: { duration: 1_000 },\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <animated.div\r\n                            style={{\r\n                                borderRadius: '50%',\r\n                                width: '60px',\r\n                                height: ' 60px',\r\n                                position: 'absolute',\r\n                                boxShadow: '0px 0px 28px #90caf9',\r\n                                ...boxShadowAnimation,\r\n                            }}\r\n                        />\r\n            <animated.div\r\n                            style={{\r\n                                opacity: 0,\r\n                                ...streamersAnimation\r\n                            }}\r\n                        >\r\n                <Streamers />\r\n            </animated.div>\r\n        </>\r\n        )\r\n}\r\n\r\nexport default ClapAnimation;","import { FunctionComponent, useContext } from 'react';\r\n\r\nimport IconButton from '@mui/material/IconButton';\r\nimport ThumbUpIcon from '@mui/icons-material/ThumbUp';\r\n\r\nimport { MediumClapContext, MediumClapContextValue } from './ContextProvider';\r\n\r\nconst ClapButton: FunctionComponent = () => {\r\n    const { handleAddedClap } = useContext<MediumClapContextValue>(MediumClapContext);\r\n\r\n    return (\r\n        <IconButton\r\n                        onClick={handleAddedClap}\r\n                        aria-label=\"thumb up\"\r\n                        color=\"primary\"\r\n                        sx={{ border: '1px solid', width: '60px', height: '60px', backgroundColor: '#ffffff' }}>\r\n            <ThumbUpIcon />\r\n        </IconButton>\r\n    )\r\n}\r\n\r\nexport default ClapButton;","import { FunctionComponent, useContext } from 'react';\r\n\r\nimport Typography from '@mui/material/Typography';\r\n\r\nimport { MediumClapContext, MediumClapContextValue } from './ContextProvider';\r\n\r\nconst TotalClap: FunctionComponent = () => {\r\n    const { totalClap } = useContext<MediumClapContextValue>(MediumClapContext);\r\n\r\n    return <Typography variant=\"body2\" color=\"primary\" sx={{ position: 'absolute', top: '6px' }}>{totalClap}</Typography>\r\n}\r\n\r\nexport default TotalClap;","import { FunctionComponent, useState } from 'react';\r\nimport { useSpring } from '@react-spring/web';\r\n\r\nimport Stack from '@mui/material/Stack';\r\n\r\nimport { MediumClapContext } from './ContextProvider'; \r\n\r\nimport AddedClap from './AddedClap';\r\nimport ClapAnimation from './ClapAnimation';\r\nimport ClapButton from './ClapButton';\r\nimport DisplayLayout from '../DisplayLayout';\r\nimport TotalClap from './TotalClap';\r\n\r\ninterface AComponentProps {\r\n    values: {\r\n        addedClap: number;\r\n        totalClap: number;\r\n    };\r\n    setValue: () => void;\r\n}\r\n\r\nconst MediumClapContextProvider: FunctionComponent<AComponentProps> = ({ values, setValue }) => {\r\n    const [isHover, setIsHover] = useState(false);\r\n    const { addedClap, totalClap } = values;\r\n\r\n    const [streamersAnimation, streamersApi] = useSpring(() => ({}));\r\n    const [clapAddedAnimation, clapAddedApi] = useSpring(() => ({\r\n    }));\r\n\r\n    const handleAddedClap = () => {\r\n        if (addedClap < 50) {\r\n            clapAddedApi.start({\r\n                from: { opacity: 2, transform: 'translate(0px, 10px)', transition: 'ease-in-out', transitionDelay: '2500' },\r\n                to: { opacity: 0, transform: 'translate(0px, -100px)' },\r\n                config: { duration: 700 },\r\n            });\r\n            streamersApi.start({\r\n                from: { opacity: 10, transform: 'scale(0)' },\r\n                to: { opacity: 0, transform: 'scale(1)' }\r\n            });\r\n            setValue();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {/* eslint-disable-next-line react/jsx-no-constructed-context-values */}\r\n            <MediumClapContext.Provider value={{\r\n            isHover,\r\n            addedClap,\r\n            totalClap,\r\n            streamersAnimation,\r\n            streamersApi,\r\n            clapAddedAnimation,\r\n            clapAddedApi,\r\n            handleAddedClap\r\n        }}>\r\n                <DisplayLayout chipLabel=\"Controlled Props 🖇️\">\r\n                    <AddedClap />\r\n                    <TotalClap />\r\n                    <Stack \r\n                    onMouseEnter={() => setIsHover(true)}\r\n                    onMouseLeave={() => setIsHover(false)}\r\n                    sx={{\r\n                        position: 'absolute'\r\n                    }}>\r\n                        <ClapAnimation />\r\n                        <ClapButton />\r\n                    </Stack>\r\n                </DisplayLayout>\r\n            </MediumClapContext.Provider>\r\n        </>\r\n        \r\n    )\r\n}\r\n\r\nexport default MediumClapContextProvider;","import { FunctionComponent, useState } from 'react';\r\n\r\nimport Grid from '@mui/material/Grid';\r\n\r\nimport MediumClapContextProvider from './MediumClapContext';\r\n\r\nconst ControlledPropsComponent: FunctionComponent = () => {\r\n    const [clapValues, setClapValues] = useState({\r\n        addedClap: 0,\r\n        totalClap: 200\r\n    });\r\n\r\n    const handleAddedClap = () => {\r\n            // eslint-disable-next-line @typescript-eslint/no-shadow\r\n            setClapValues(({ addedClap, totalClap }) => ({\r\n                addedClap: addedClap + 1,\r\n                totalClap: totalClap + 1\r\n            }));\r\n    };\r\n\r\n    return (\r\n        <Grid container spacing={3}>\r\n            <Grid item>\r\n                <MediumClapContextProvider values={clapValues} setValue={handleAddedClap} />\r\n            </Grid>\r\n            <Grid item>\r\n                <MediumClapContextProvider values={clapValues} setValue={handleAddedClap} />\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default ControlledPropsComponent;","import { FunctionComponent } from 'react';\r\n\r\nimport Typography from '@mui/material/Typography';\r\n\r\nconst CustomHooksContent: FunctionComponent = () => (\r\n    <>\r\n        <Typography variant='h4'>Custom Hooks</Typography>\r\n        <Typography variant='body1'>\r\n            Custom Hooks let you share logic between components.\r\n        </Typography>\r\n        <Typography variant='body1'>\r\n            Strictly speaking, it&apos;s not a design pattern, but it comes in handy when you want to reuse your logic.\r\n        </Typography>\r\n        <Typography variant='body1'>\r\n            The benefit of using the custom hook in this case is using the exactly same animation logic with total different UIs.\r\n        </Typography>\r\n    </>\r\n    \r\n)\r\n\r\nexport default CustomHooksContent;","import { FunctionComponent, PropsWithChildren } from 'react';\r\n\r\nimport Chip from '@mui/material/Chip';\r\nimport Paper from '@mui/material/Paper';\r\nimport Stack from '@mui/material/Stack';\r\n\r\ninterface DisplayLayoutProps {\r\n    chipLabel: string;\r\n}\r\n\r\nconst DisplayLayout: FunctionComponent<PropsWithChildren<DisplayLayoutProps>> = ({ children, chipLabel }) => (\r\n    <Paper sx={{ padding: '32px', width: '300px', backgroundColor: '#ffffff' }}>\r\n        <Chip label={chipLabel} color=\"primary\" sx={{ display: 'flex', marginBottom: '60px' }} />\r\n        <Stack sx={{ display: 'flex', alignItems: 'center', position: 'relative', padding: '32px' }}>\r\n            {children}\r\n        </Stack>\r\n    </Paper>\r\n    )\r\n\r\nexport default DisplayLayout;","import { useSpring } from '@react-spring/web';\r\nimport { useState } from 'react';\r\n\r\nconst useClapAnimation = () => {\r\n    const [isHover, setIsHover] = useState(false);\r\n\r\n    const boxShadowAnimation = useSpring({\r\n        from: { opacity: isHover ? 0 : 1, transition: 'ease' },\r\n        to: [{ opacity: isHover ? 1 : 0 }],\r\n        loop: isHover,\r\n        config: { duration: 1_000 },\r\n    });\r\n    const [clapAddedAnimation, clapAddedApi] = useSpring(() => ({\r\n    }));\r\n    const [streamersAnimation, streamersApi] = useSpring(() => ({}));\r\n\r\n    return { boxShadowAnimation, clapAddedAnimation, clapAddedApi, streamersAnimation, streamersApi, setIsHover }\r\n}\r\n\r\nexport default useClapAnimation;","import { useState } from 'react';\r\n\r\nconst useClapsCount = () => {\r\n    const [addedClap, setAddedClap] = useState(0);\r\n    const [totalClap, setTotalClap] = useState(200);\r\n\r\n    return { addedClap, setAddedClap, totalClap, setTotalClap }\r\n}\r\n\r\nexport default useClapsCount;","import { FunctionComponent } from 'react';\r\nimport { animated } from '@react-spring/web';\r\n\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Stack from '@mui/material/Stack';\r\nimport ThumbUpIcon from '@mui/icons-material/ThumbUp';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nimport useClapAnimation from './useClapAnimation';\r\nimport useClapsCount from './useClapsCount';\r\n\r\nimport DisplayLayout from '../DisplayLayout';\r\nimport Streamers from '../Streamers';\r\n\r\nconst MediumClapHooks: FunctionComponent = () => {\r\n    const { clapAddedAnimation, boxShadowAnimation, streamersAnimation, setIsHover, clapAddedApi, streamersApi } = useClapAnimation();\r\n    const { addedClap, totalClap, setAddedClap, setTotalClap } = useClapsCount();\r\n\r\n    const handleAddedClap = () => {\r\n        if (addedClap < 50) {\r\n            clapAddedApi.start({\r\n                from: { opacity: 2, transform: 'translate(0px, 10px)', transition: 'ease-in-out', transitionDelay: '2500' },\r\n                to: { opacity: 0, transform: 'translate(0px, -100px)' },\r\n                config: { duration: 700 },\r\n            });\r\n            streamersApi.start({\r\n                from: { opacity: 10, transform: 'scale(0)' },\r\n                to: { opacity: 0, transform: 'scale(1)' }\r\n            });\r\n            setAddedClap(addedClap + 1);\r\n            setTotalClap(totalClap + 1);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <DisplayLayout chipLabel='Multiple Custom Hooks 🪝'>\r\n            <animated.div\r\n                    style={{\r\n                        position: 'relative',\r\n                        opacity: 0,\r\n                        ...clapAddedAnimation\r\n                    }}\r\n                >\r\n                <IconButton sx={{\r\n                        padding: '20px',\r\n                        backgroundColor: '#90caf9',\r\n                        width: '20px',\r\n                        height: '20px',\r\n                    }}>\r\n                    <Typography variant=\"body2\">{`+${addedClap}`}</Typography>\r\n                </IconButton>\r\n            </animated.div>\r\n            <Typography variant=\"body2\" color=\"primary\" sx={{ position: 'absolute', top: '6px' }}>{totalClap}</Typography>\r\n            <Stack \r\n                    onMouseEnter={() => setIsHover(true)}\r\n                    onMouseLeave={() => setIsHover(false)}\r\n                    sx={{\r\n                        position: 'absolute'\r\n                    }}\r\n                >\r\n                <animated.div\r\n                        style={{\r\n                            borderRadius: '50%',\r\n                            width: '60px',\r\n                            height: ' 60px',\r\n                            position: 'absolute',\r\n                            boxShadow: '0px 0px 28px #90caf9',\r\n                            ...boxShadowAnimation,\r\n                        }}\r\n                    />\r\n                <animated.div\r\n                        style={{\r\n                            opacity: 0,\r\n                            ...streamersAnimation\r\n                        }}\r\n                    >\r\n                    <Streamers />\r\n                </animated.div>\r\n                <IconButton\r\n                        onClick={handleAddedClap}\r\n                        aria-label=\"thumb up\"\r\n                        color=\"primary\"\r\n                        sx={{ border: '1px solid', width: '60px', height: '60px', backgroundColor: '#ffffff' }}>\r\n                    <ThumbUpIcon />\r\n                </IconButton>\r\n            </Stack>\r\n        </DisplayLayout>);\r\n}\r\n\r\nexport default MediumClapHooks;","import { FunctionComponent } from 'react';\r\n\r\nconst circleStyles = {\r\n    borderRadius: '50%',\r\n    backgroundColor: 'gray',\r\n    width: '5px',\r\n    height: '5px',\r\n}\r\n\r\nconst triangleStyles = {\r\n    width: 0,\r\n    height: 0,\r\n    borderStyle: 'solid',\r\n}\r\n\r\nconst Streamers: FunctionComponent = () => (\r\n    <div style={{ position: 'absolute' }}>\r\n        <div \r\n            style={{\r\n                position: 'absolute',\r\n                left: '60px',\r\n                ...circleStyles\r\n            }}\r\n        />\r\n        <div \r\n            style={{\r\n                borderWidth: '7px 0 0 7px',\r\n                borderColor: 'transparent transparent transparent #ff0033',\r\n                position: 'absolute',\r\n                top: '-15px',\r\n                left: '75px',\r\n                ...triangleStyles\r\n            }} \r\n        />\r\n        <div \r\n            style={{\r\n                position: 'absolute',\r\n                top: '35px',\r\n                left: '70px',\r\n                ...circleStyles\r\n            }}\r\n        />\r\n        <div \r\n            style={{\r\n                borderWidth: '7px 7px 0 0',\r\n                borderColor: '#ff0033 transparent transparent transparent',\r\n                position: 'absolute',\r\n                top: '45px',\r\n                left: '85px',\r\n                ...triangleStyles\r\n            }} \r\n        />\r\n        <div \r\n            style={{\r\n                position: 'absolute',\r\n                top: '70px',\r\n                left: '30px',\r\n                ...circleStyles\r\n            }}\r\n        />\r\n        <div \r\n            style={{\r\n                borderWidth: '0 3.5px 7px 3.5px',\r\n                borderColor: 'transparent transparent #ff0033 transparent',\r\n                position: 'absolute',\r\n                top: '85px',\r\n                left: '30px',\r\n                ...triangleStyles\r\n            }} \r\n        />\r\n        <div \r\n            style={{\r\n                position: 'absolute',\r\n                top: '45px',\r\n                left: '-10px',\r\n                ...circleStyles\r\n            }}\r\n        />\r\n        <div \r\n            style={{\r\n                borderWidth: '0 7px 7px 0',\r\n                borderColor: 'transparent #ff0033 transparent transparent',\r\n                position: 'absolute',\r\n                top: '55px',\r\n                left: '-25px',\r\n                ...triangleStyles\r\n            }} \r\n        />\r\n        <div \r\n            style={{\r\n                position: 'absolute',\r\n                top: '0px',\r\n                left: '-5px',\r\n                ...circleStyles\r\n            }}\r\n        />\r\n        <div \r\n            style={{\r\n                borderWidth: '0 0 7px 7px',\r\n                borderColor: 'transparent transparent #ff0033 transparent',\r\n                position: 'absolute',\r\n                top: '-11px',\r\n                left: '-20px',\r\n                ...triangleStyles\r\n            }} \r\n        />\r\n    </div>\r\n    )\r\n\r\nexport default Streamers;    ","import { FunctionComponent } from 'react';\r\n\r\nimport Stack from '@mui/material/Stack';\r\n\r\nimport ComparisonSection from '../components/ComparisonSection';\r\nimport ControlledPropsComponent from '../components/ControlledProps';\r\nimport CustomHooksContent from '../components/CustomHooksContent';\r\nimport MultipleCustomHooks from '../components/MultipleCustomHooks';\r\n\r\nconst MultipleCustomHooksPage: FunctionComponent = () => (\r\n    <Stack spacing={2}>\r\n        <CustomHooksContent />\r\n        <ComparisonSection\r\n            beforeComponent={<ControlledPropsComponent />}\r\n            beforeSourceCode=\"https://github.com/12cassie34/react-design-pattern-with-medium-clap/tree/main/src/components/ControlledProps\"\r\n            afterComponent={<MultipleCustomHooks />}\r\n            afterSourceCode=\"https://github.com/12cassie34/react-design-pattern-with-medium-clap/tree/main/src/components/MultipleCustomHooks\"\r\n        />\r\n    </Stack>\r\n)\r\n\r\nexport default MultipleCustomHooksPage;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M1 21h4V9H1v12zm22-11c0-1.1-.9-2-2-2h-6.31l.95-4.57.03-.32c0-.41-.17-.79-.44-1.06L14.17 1 7.59 7.59C7.22 7.95 7 8.45 7 9v10c0 1.1.9 2 2 2h9c.83 0 1.54-.5 1.84-1.22l3.02-7.05c.09-.23.14-.47.14-.73v-2z\"\n}), 'ThumbUp');\nexports.default = _default;"],"names":["_ref","beforeComponent","beforeSourceCode","afterComponent","afterSourceCode","_jsxs","Grid","container","spacing","children","item","_jsx","Typography","onClick","window","open","sx","color","fontWeight","cursor","textDecoration","variant","MediumClapContext","createContext","isHover","addedClap","totalClap","_useContext","useContext","clapAddedAnimation","animated","style","_objectSpread","position","opacity","IconButton","padding","backgroundColor","width","height","concat","streamersAnimation","boxShadowAnimation","useSpring","from","transition","to","loop","config","duration","_Fragment","borderRadius","boxShadow","Streamers","handleAddedClap","border","ThumbUpIcon","top","values","setValue","_useState","useState","_useState2","_slicedToArray","setIsHover","_useSpring","_useSpring2","streamersApi","_useSpring3","_useSpring4","clapAddedApi","Provider","value","start","transform","transitionDelay","DisplayLayout","chipLabel","AddedClap","TotalClap","Stack","onMouseEnter","onMouseLeave","ClapAnimation","ClapButton","clapValues","setClapValues","MediumClapContextProvider","Paper","Chip","label","display","marginBottom","alignItems","setAddedClap","_useState3","_useState4","setTotalClap","_useClapAnimation","useClapAnimation","_useClapsCount","useClapsCount","circleStyles","triangleStyles","borderStyle","left","borderWidth","borderColor","CustomHooksContent","ComparisonSection","ControlledPropsComponent","MultipleCustomHooks","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}