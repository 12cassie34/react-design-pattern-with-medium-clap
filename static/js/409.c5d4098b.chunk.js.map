{"version":3,"file":"static/js/409.c5d4098b.chunk.js","mappings":"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","sources":["components/ComparisonSection.tsx","components/DisplayLayout.tsx","components/PropsCollection/useClapAnimation.ts","components/PropsCollection/useClapsCount.ts","components/PropsCollection/index.tsx","components/PropsGetter/useClapAnimation.ts","components/PropsGetter/useClapsCount.ts","components/PropsGetter/index.tsx","components/Streamers.tsx","pages/PropsGetter.tsx"],"sourcesContent":["import { FunctionComponent, ReactNode } from \"react\";\r\n\r\nimport Grid from '@mui/material/Grid';\r\nimport Typography from '@mui/material/Typography';\r\n\r\ninterface ComparisonSectionProps {\r\n    beforeComponent: ReactNode;\r\n    afterComponent: ReactNode;\r\n    beforeSourceCode: string;\r\n    afterSourceCode: string;\r\n}\r\n\r\nconst ComparisonSection: FunctionComponent<ComparisonSectionProps> = ({ beforeComponent, beforeSourceCode, afterComponent, afterSourceCode }) => (\r\n    <Grid container spacing={4}>\r\n        <Grid item>\r\n            <Typography\r\n                        onClick={() => window.open(beforeSourceCode, '_blank', 'noopener noreferrer')}\r\n                        sx={{\r\n                            color: 'aquamarine',\r\n                            fontWeight: 600,\r\n                            cursor: 'pointer',\r\n                            textDecoration: 'underline'\r\n                        }}\r\n                        variant='h5'\r\n                    >\r\n                Before ðŸ”—\r\n            </Typography>\r\n            {beforeComponent}\r\n        </Grid>\r\n        <Grid item>\r\n            <Typography\r\n                        onClick={() => window.open(afterSourceCode, '_blank', 'noopener noreferrer')}\r\n                        sx={{\r\n                            color: '#fc90a4',\r\n                            fontWeight: 600,\r\n                            cursor: 'pointer',\r\n                            textDecoration: 'underline'\r\n                        }}\r\n                        variant='h5'\r\n                    >\r\n                After ðŸ”—\r\n            </Typography>\r\n            {afterComponent}\r\n        </Grid>\r\n    </Grid>\r\n        )\r\n\r\nexport default ComparisonSection;","import { FunctionComponent, PropsWithChildren } from 'react';\r\n\r\nimport Chip from '@mui/material/Chip';\r\nimport Paper from '@mui/material/Paper';\r\nimport Stack from '@mui/material/Stack';\r\n\r\ninterface DisplayLayoutProps {\r\n    chipLabel: string;\r\n}\r\n\r\nconst DisplayLayout: FunctionComponent<PropsWithChildren<DisplayLayoutProps>> = ({ children, chipLabel }) => (\r\n    <Paper sx={{ padding: '32px', width: '300px', backgroundColor: '#ffffff' }}>\r\n        <Chip label={chipLabel} color=\"primary\" sx={{ display: 'flex', marginBottom: '60px' }} />\r\n        <Stack sx={{ display: 'flex', alignItems: 'center', position: 'relative', padding: '32px' }}>\r\n            {children}\r\n        </Stack>\r\n    </Paper>\r\n    )\r\n\r\nexport default DisplayLayout;","import { useSpring } from '@react-spring/web';\r\nimport { useState } from 'react';\r\n\r\nconst useClapAnimation = () => {\r\n    const [isHover, setIsHover] = useState(false);\r\n\r\n    const boxShadowAnimation = useSpring({\r\n        from: { opacity: isHover ? 0 : 1, transition: 'ease' },\r\n        to: [{ opacity: isHover ? 1 : 0 }],\r\n        loop: isHover,\r\n        config: { duration: 1_000 },\r\n    });\r\n    const [clapAddedAnimation, clapAddedApi] = useSpring(() => ({\r\n    }));\r\n    const [streamersAnimation, streamersApi] = useSpring(() => ({}));\r\n\r\n    return { boxShadowAnimation, clapAddedAnimation, clapAddedApi, streamersAnimation, streamersApi, setIsHover }\r\n}\r\n\r\nexport default useClapAnimation;","import { useState } from 'react';\r\n\r\nconst useClapsCount = () => {\r\n    const [addedClap, setAddedClap] = useState(0);\r\n    const [totalClap, setTotalClap] = useState(200);\r\n\r\n    return { addedClap, setAddedClap, totalClap, setTotalClap }\r\n}\r\n\r\nexport default useClapsCount;","import { FunctionComponent, PropsWithChildren } from 'react';\r\nimport { animated } from '@react-spring/web';\r\n\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Stack from '@mui/material/Stack';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nimport useClapAnimation from './useClapAnimation';\r\nimport useClapsCount from './useClapsCount';\r\n\r\nimport DisplayLayout from '../DisplayLayout';\r\nimport Streamers from '../Streamers';\r\n\r\ninterface ClapContainerProps {\r\n    handleClick: () => void;\r\n}\r\n\r\nconst ClapContainer: FunctionComponent<PropsWithChildren<ClapContainerProps>> = ({ children, handleClick, ...props }) => (\r\n    <IconButton\r\n                        onClick={handleClick}\r\n                        aria-label=\"thumb up\"\r\n                        color=\"primary\"\r\n                        sx={{ border: '1px solid', width: '60px', height: '60px', backgroundColor: '#ffffff' }}\r\n                        {...props}>\r\n        {children}\r\n    </IconButton>\r\n    )\r\n\r\nconst PropsCollection: FunctionComponent = () => {\r\n    const { clapAddedAnimation, boxShadowAnimation, streamersAnimation, setIsHover, clapAddedApi, streamersApi } = useClapAnimation();\r\n    const { addedClap, totalClap, setAddedClap, setTotalClap } = useClapsCount();\r\n\r\n    const handleAddedClap = () => {\r\n        if (addedClap < 50) {\r\n            clapAddedApi.start({\r\n                from: { opacity: 2, transform: 'translate(0px, 10px)', transition: 'ease-in-out', transitionDelay: '2500' },\r\n                to: { opacity: 0, transform: 'translate(0px, -100px)' },\r\n                config: { duration: 700 },\r\n            });\r\n            streamersApi.start({\r\n                from: { opacity: 10, transform: 'scale(0)' },\r\n                to: { opacity: 0, transform: 'scale(1)' }\r\n            });\r\n            setAddedClap(addedClap + 1);\r\n            setTotalClap(totalClap + 1);\r\n        }\r\n    };\r\n\r\n    const clapContainerProps = {\r\n        'aria-valuenow': totalClap,\r\n        'aria-valuemax': 50\r\n    }\r\n\r\n    return (\r\n        <DisplayLayout chipLabel='Props Collection ðŸ”¡'>\r\n            <animated.div\r\n                    style={{\r\n                        position: 'relative',\r\n                        opacity: 0,\r\n                        ...clapAddedAnimation\r\n                    }}\r\n                >\r\n                <IconButton sx={{\r\n                        padding: '20px',\r\n                        backgroundColor: '#90caf9',\r\n                        width: '20px',\r\n                        height: '20px',\r\n                    }}>\r\n                    <Typography variant=\"body2\">{`+${addedClap}`}</Typography>\r\n                </IconButton>\r\n            </animated.div>\r\n            <Typography variant=\"body2\" color=\"primary\" sx={{ position: 'absolute', top: '6px' }}>{totalClap}</Typography>\r\n            <Stack \r\n                    onMouseEnter={() => setIsHover(true)}\r\n                    onMouseLeave={() => setIsHover(false)}\r\n                    sx={{\r\n                        position: 'absolute'\r\n                    }}\r\n                >\r\n                <animated.div\r\n                        style={{\r\n                            borderRadius: '50%',\r\n                            width: '60px',\r\n                            height: ' 60px',\r\n                            position: 'absolute',\r\n                            boxShadow: '0px 0px 28px #90caf9',\r\n                            ...boxShadowAnimation,\r\n                        }}\r\n                    />\r\n                <animated.div\r\n                        style={{\r\n                            opacity: 0,\r\n                            ...streamersAnimation\r\n                        }}\r\n                    >\r\n                    <Streamers />\r\n                </animated.div>\r\n                <ClapContainer handleClick={handleAddedClap} {...clapContainerProps} >\r\n                    <Typography variant='body1'>Thumb UP</Typography>\r\n                </ClapContainer>\r\n            </Stack>\r\n        </DisplayLayout>);\r\n}\r\n\r\nexport default PropsCollection;","import { useSpring } from '@react-spring/web';\r\nimport { useState } from 'react';\r\n\r\nconst useClapAnimation = () => {\r\n    const [isHover, setIsHover] = useState(false);\r\n\r\n    const boxShadowAnimation = useSpring({\r\n        from: { opacity: isHover ? 0 : 1, transition: 'ease' },\r\n        to: [{ opacity: isHover ? 1 : 0 }],\r\n        loop: isHover,\r\n        config: { duration: 1_000 },\r\n    });\r\n    const [clapAddedAnimation, clapAddedApi] = useSpring(() => ({\r\n    }));\r\n    const [streamersAnimation, streamersApi] = useSpring(() => ({}));\r\n\r\n    return { boxShadowAnimation, clapAddedAnimation, clapAddedApi, streamersAnimation, streamersApi, setIsHover }\r\n}\r\n\r\nexport default useClapAnimation;","import { useState } from 'react';\r\n\r\nconst useClapsCount = () => {\r\n    const [addedClap, setAddedClap] = useState(0);\r\n    const [totalClap, setTotalClap] = useState(200);\r\n\r\n    return { addedClap, setAddedClap, totalClap, setTotalClap }\r\n}\r\n\r\nexport default useClapsCount;","import { FunctionComponent, PropsWithChildren } from 'react';\r\nimport { animated } from '@react-spring/web';\r\n\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Stack from '@mui/material/Stack';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nimport useClapAnimation from './useClapAnimation';\r\nimport useClapsCount from './useClapsCount';\r\n\r\nimport DisplayLayout from '../DisplayLayout';\r\nimport Streamers from '../Streamers';\r\n\r\ninterface ClapContainerProps {\r\n    handleClick: () => void;\r\n}\r\n\r\nconst ClapContainer: FunctionComponent<PropsWithChildren<ClapContainerProps>> = ({ children, handleClick, ...props }) => (\r\n    <IconButton\r\n                        onClick={handleClick}\r\n                        aria-label=\"thumb up\"\r\n                        color=\"primary\"\r\n                        sx={{ border: '1px solid', width: '60px', height: '60px', backgroundColor: '#ffffff' }}\r\n                        {...props}>\r\n        {children}\r\n    </IconButton>\r\n    )\r\n\r\nconst PropsGetter: FunctionComponent = () => {\r\n    const { clapAddedAnimation, boxShadowAnimation, streamersAnimation, setIsHover, clapAddedApi, streamersApi } = useClapAnimation();\r\n    const { addedClap, totalClap, setAddedClap, setTotalClap } = useClapsCount();\r\n\r\n    const handleAddedClap = () => {\r\n        if (addedClap < 50) {\r\n            clapAddedApi.start({\r\n                from: { opacity: 2, transform: 'translate(0px, 10px)', transition: 'ease-in-out', transitionDelay: '2500' },\r\n                to: { opacity: 0, transform: 'translate(0px, -100px)' },\r\n                config: { duration: 700 },\r\n            });\r\n            streamersApi.start({\r\n                from: { opacity: 10, transform: 'scale(0)' },\r\n                to: { opacity: 0, transform: 'scale(1)' }\r\n            });\r\n            setAddedClap(addedClap + 1);\r\n            setTotalClap(totalClap + 1);\r\n        }\r\n    };\r\n\r\n    const getClapContainerProps = () => \r\n        // Here, your can do some complicated operation before passing \r\n        // props in <ClapContainer />\r\n         ({\r\n            'aria-valuenow': totalClap,\r\n        'aria-valuemax': 50\r\n        })\r\n    \r\n\r\n    return (\r\n        <DisplayLayout chipLabel='Props Getter ðŸ›¬'>\r\n            <animated.div\r\n                    style={{\r\n                        position: 'relative',\r\n                        opacity: 0,\r\n                        ...clapAddedAnimation\r\n                    }}\r\n                >\r\n                <IconButton sx={{\r\n                        padding: '20px',\r\n                        backgroundColor: '#90caf9',\r\n                        width: '20px',\r\n                        height: '20px',\r\n                    }}>\r\n                    <Typography variant=\"body2\">{`+${addedClap}`}</Typography>\r\n                </IconButton>\r\n            </animated.div>\r\n            <Typography variant=\"body2\" color=\"primary\" sx={{ position: 'absolute', top: '6px' }}>{totalClap}</Typography>\r\n            <Stack \r\n                    onMouseEnter={() => setIsHover(true)}\r\n                    onMouseLeave={() => setIsHover(false)}\r\n                    sx={{\r\n                        position: 'absolute'\r\n                    }}\r\n                >\r\n                <animated.div\r\n                        style={{\r\n                            borderRadius: '50%',\r\n                            width: '60px',\r\n                            height: ' 60px',\r\n                            position: 'absolute',\r\n                            boxShadow: '0px 0px 28px #90caf9',\r\n                            ...boxShadowAnimation,\r\n                        }}\r\n                    />\r\n                <animated.div\r\n                        style={{\r\n                            opacity: 0,\r\n                            ...streamersAnimation\r\n                        }}\r\n                    >\r\n                    <Streamers />\r\n                </animated.div>\r\n                <ClapContainer handleClick={handleAddedClap} {...getClapContainerProps()} >\r\n                    <Typography variant='body1'>Thumb UP</Typography>\r\n                </ClapContainer>\r\n            </Stack>\r\n        </DisplayLayout>);\r\n}\r\n\r\nexport default PropsGetter;","import { FunctionComponent } from 'react';\r\n\r\nconst circleStyles = {\r\n    borderRadius: '50%',\r\n    backgroundColor: 'gray',\r\n    width: '5px',\r\n    height: '5px',\r\n}\r\n\r\nconst triangleStyles = {\r\n    width: 0,\r\n    height: 0,\r\n    borderStyle: 'solid',\r\n}\r\n\r\nconst Streamers: FunctionComponent = () => (\r\n    <div style={{ position: 'absolute' }}>\r\n        <div \r\n            style={{\r\n                position: 'absolute',\r\n                left: '60px',\r\n                ...circleStyles\r\n            }}\r\n        />\r\n        <div \r\n            style={{\r\n                borderWidth: '7px 0 0 7px',\r\n                borderColor: 'transparent transparent transparent #ff0033',\r\n                position: 'absolute',\r\n                top: '-15px',\r\n                left: '75px',\r\n                ...triangleStyles\r\n            }} \r\n        />\r\n        <div \r\n            style={{\r\n                position: 'absolute',\r\n                top: '35px',\r\n                left: '70px',\r\n                ...circleStyles\r\n            }}\r\n        />\r\n        <div \r\n            style={{\r\n                borderWidth: '7px 7px 0 0',\r\n                borderColor: '#ff0033 transparent transparent transparent',\r\n                position: 'absolute',\r\n                top: '45px',\r\n                left: '85px',\r\n                ...triangleStyles\r\n            }} \r\n        />\r\n        <div \r\n            style={{\r\n                position: 'absolute',\r\n                top: '70px',\r\n                left: '30px',\r\n                ...circleStyles\r\n            }}\r\n        />\r\n        <div \r\n            style={{\r\n                borderWidth: '0 3.5px 7px 3.5px',\r\n                borderColor: 'transparent transparent #ff0033 transparent',\r\n                position: 'absolute',\r\n                top: '85px',\r\n                left: '30px',\r\n                ...triangleStyles\r\n            }} \r\n        />\r\n        <div \r\n            style={{\r\n                position: 'absolute',\r\n                top: '45px',\r\n                left: '-10px',\r\n                ...circleStyles\r\n            }}\r\n        />\r\n        <div \r\n            style={{\r\n                borderWidth: '0 7px 7px 0',\r\n                borderColor: 'transparent #ff0033 transparent transparent',\r\n                position: 'absolute',\r\n                top: '55px',\r\n                left: '-25px',\r\n                ...triangleStyles\r\n            }} \r\n        />\r\n        <div \r\n            style={{\r\n                position: 'absolute',\r\n                top: '0px',\r\n                left: '-5px',\r\n                ...circleStyles\r\n            }}\r\n        />\r\n        <div \r\n            style={{\r\n                borderWidth: '0 0 7px 7px',\r\n                borderColor: 'transparent transparent #ff0033 transparent',\r\n                position: 'absolute',\r\n                top: '-11px',\r\n                left: '-20px',\r\n                ...triangleStyles\r\n            }} \r\n        />\r\n    </div>\r\n    )\r\n\r\nexport default Streamers;    ","import { FunctionComponent } from \"react\";\r\n\r\nimport Stack from '@mui/material/Stack';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nimport ComparisonSection from \"../components/ComparisonSection\";\r\nimport PropsCollection from \"../components/PropsCollection\";\r\nimport PropsGetter from \"../components/PropsGetter\";\r\n\r\nconst PropsGetterPage: FunctionComponent = () => (\r\n    <Stack spacing={2}>\r\n        <Typography variant='h4'>Props Getter</Typography>\r\n        <Typography variant='body1'>\r\n            The props collection is an object that we pass in the component.\r\n        </Typography>\r\n        <Typography variant='body1'>\r\n            In the other hand, the props getter is a function that we invoke.\r\n            We will return an object, but within the function, we can do some complicated operation.\r\n            And that is the strength of the props getter.\r\n        </Typography>\r\n        <ComparisonSection\r\n            beforeComponent={<PropsCollection />}\r\n            beforeSourceCode=\"https://github.com/12cassie34/react-design-pattern-with-medium-clap/tree/main/src/components/PropsCollection\"\r\n            afterComponent={<PropsGetter />}\r\n            afterSourceCode=\"https://github.com/12cassie34/react-design-pattern-with-medium-clap/tree/main/src/components/PropsGetter\"\r\n        />\r\n    </Stack>\r\n)\r\n\r\nexport default PropsGetterPage;"],"names":["_ref","beforeComponent","beforeSourceCode","afterComponent","afterSourceCode","_jsxs","Grid","container","spacing","children","item","_jsx","Typography","onClick","window","open","sx","color","fontWeight","cursor","textDecoration","variant","chipLabel","Paper","padding","width","backgroundColor","Chip","label","display","marginBottom","Stack","alignItems","position","_useState","useState","_useState2","_slicedToArray","isHover","setIsHover","boxShadowAnimation","useSpring","from","opacity","transition","to","loop","config","duration","_useSpring","_useSpring2","clapAddedAnimation","clapAddedApi","_useSpring3","_useSpring4","streamersAnimation","streamersApi","addedClap","setAddedClap","_useState3","_useState4","totalClap","setTotalClap","ClapContainer","handleClick","props","_objectWithoutProperties","_excluded","IconButton","_objectSpread","border","height","_useClapAnimation","useClapAnimation","_useClapsCount","useClapsCount","clapContainerProps","DisplayLayout","animated","style","concat","top","onMouseEnter","onMouseLeave","borderRadius","boxShadow","Streamers","start","transform","transitionDelay","circleStyles","triangleStyles","borderStyle","left","borderWidth","borderColor","ComparisonSection","PropsCollection","PropsGetter"],"sourceRoot":""}