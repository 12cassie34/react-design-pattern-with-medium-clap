{"version":3,"file":"static/js/612.2cd32e76.chunk.js","mappings":"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","sources":["components/ComparisonSection.tsx","components/DisplayLayout.tsx","components/MultipleCustomHooks/useClapAnimation.ts","components/MultipleCustomHooks/useClapsCount.ts","components/MultipleCustomHooks/index.tsx","components/PropsCollection/useClapAnimation.ts","components/PropsCollection/useClapsCount.ts","components/PropsCollection/index.tsx","components/Streamers.tsx","pages/PropsCollection.tsx","../node_modules/@mui/icons-material/ThumbUp.js"],"sourcesContent":["import { FunctionComponent, ReactNode } from \"react\";\r\n\r\nimport Grid from '@mui/material/Grid';\r\nimport Typography from '@mui/material/Typography';\r\n\r\ninterface ComparisonSectionProps {\r\n    beforeComponent: ReactNode;\r\n    afterComponent: ReactNode;\r\n    beforeSourceCode: string;\r\n    afterSourceCode: string;\r\n}\r\n\r\nconst ComparisonSection: FunctionComponent<ComparisonSectionProps> = ({ beforeComponent, beforeSourceCode, afterComponent, afterSourceCode }) => (\r\n    <Grid container spacing={4}>\r\n        <Grid item>\r\n            <Typography\r\n                        onClick={() => window.open(beforeSourceCode, '_blank', 'noopener noreferrer')}\r\n                        sx={{\r\n                            color: 'aquamarine',\r\n                            fontWeight: 600,\r\n                            cursor: 'pointer',\r\n                            textDecoration: 'underline'\r\n                        }}\r\n                        variant='h5'\r\n                    >\r\n                Before 🔗\r\n            </Typography>\r\n            {beforeComponent}\r\n        </Grid>\r\n        <Grid item>\r\n            <Typography\r\n                        onClick={() => window.open(afterSourceCode, '_blank', 'noopener noreferrer')}\r\n                        sx={{\r\n                            color: '#fc90a4',\r\n                            fontWeight: 600,\r\n                            cursor: 'pointer',\r\n                            textDecoration: 'underline'\r\n                        }}\r\n                        variant='h5'\r\n                    >\r\n                After 🔗\r\n            </Typography>\r\n            {afterComponent}\r\n        </Grid>\r\n    </Grid>\r\n        )\r\n\r\nexport default ComparisonSection;","import { FunctionComponent, PropsWithChildren } from 'react';\r\n\r\nimport Chip from '@mui/material/Chip';\r\nimport Paper from '@mui/material/Paper';\r\nimport Stack from '@mui/material/Stack';\r\n\r\ninterface DisplayLayoutProps {\r\n    chipLabel: string;\r\n}\r\n\r\nconst DisplayLayout: FunctionComponent<PropsWithChildren<DisplayLayoutProps>> = ({ children, chipLabel }) => (\r\n    <Paper sx={{ padding: '32px', width: '300px', backgroundColor: '#ffffff' }}>\r\n        <Chip label={chipLabel} color=\"primary\" sx={{ display: 'flex', marginBottom: '60px' }} />\r\n        <Stack sx={{ display: 'flex', alignItems: 'center', position: 'relative', padding: '32px' }}>\r\n            {children}\r\n        </Stack>\r\n    </Paper>\r\n    )\r\n\r\nexport default DisplayLayout;","import { useSpring } from '@react-spring/web';\r\nimport { useState } from 'react';\r\n\r\nconst useClapAnimation = () => {\r\n    const [isHover, setIsHover] = useState(false);\r\n\r\n    const boxShadowAnimation = useSpring({\r\n        from: { opacity: isHover ? 0 : 1, transition: 'ease' },\r\n        to: [{ opacity: isHover ? 1 : 0 }],\r\n        loop: isHover,\r\n        config: { duration: 1_000 },\r\n    });\r\n    const [clapAddedAnimation, clapAddedApi] = useSpring(() => ({\r\n    }));\r\n    const [streamersAnimation, streamersApi] = useSpring(() => ({}));\r\n\r\n    return { boxShadowAnimation, clapAddedAnimation, clapAddedApi, streamersAnimation, streamersApi, setIsHover }\r\n}\r\n\r\nexport default useClapAnimation;","import { useState } from 'react';\r\n\r\nconst useClapsCount = () => {\r\n    const [addedClap, setAddedClap] = useState(0);\r\n    const [totalClap, setTotalClap] = useState(200);\r\n\r\n    return { addedClap, setAddedClap, totalClap, setTotalClap }\r\n}\r\n\r\nexport default useClapsCount;","import { FunctionComponent } from 'react';\r\nimport { animated } from '@react-spring/web';\r\n\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Stack from '@mui/material/Stack';\r\nimport ThumbUpIcon from '@mui/icons-material/ThumbUp';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nimport useClapAnimation from './useClapAnimation';\r\nimport useClapsCount from './useClapsCount';\r\n\r\nimport DisplayLayout from '../DisplayLayout';\r\nimport Streamers from '../Streamers';\r\n\r\nconst MediumClapHooks: FunctionComponent = () => {\r\n    const { clapAddedAnimation, boxShadowAnimation, streamersAnimation, setIsHover, clapAddedApi, streamersApi } = useClapAnimation();\r\n    const { addedClap, totalClap, setAddedClap, setTotalClap } = useClapsCount();\r\n\r\n    const handleAddedClap = () => {\r\n        if (addedClap < 50) {\r\n            clapAddedApi.start({\r\n                from: { opacity: 2, transform: 'translate(0px, 10px)', transition: 'ease-in-out', transitionDelay: '2500' },\r\n                to: { opacity: 0, transform: 'translate(0px, -100px)' },\r\n                config: { duration: 700 },\r\n            });\r\n            streamersApi.start({\r\n                from: { opacity: 10, transform: 'scale(0)' },\r\n                to: { opacity: 0, transform: 'scale(1)' }\r\n            });\r\n            setAddedClap(addedClap + 1);\r\n            setTotalClap(totalClap + 1);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <DisplayLayout chipLabel='Multiple Custom Hooks 🪝'>\r\n            <animated.div\r\n                    style={{\r\n                        position: 'relative',\r\n                        opacity: 0,\r\n                        ...clapAddedAnimation\r\n                    }}\r\n                >\r\n                <IconButton sx={{\r\n                        padding: '20px',\r\n                        backgroundColor: '#90caf9',\r\n                        width: '20px',\r\n                        height: '20px',\r\n                    }}>\r\n                    <Typography variant=\"body2\">{`+${addedClap}`}</Typography>\r\n                </IconButton>\r\n            </animated.div>\r\n            <Typography variant=\"body2\" color=\"primary\" sx={{ position: 'absolute', top: '6px' }}>{totalClap}</Typography>\r\n            <Stack \r\n                    onMouseEnter={() => setIsHover(true)}\r\n                    onMouseLeave={() => setIsHover(false)}\r\n                    sx={{\r\n                        position: 'absolute'\r\n                    }}\r\n                >\r\n                <animated.div\r\n                        style={{\r\n                            borderRadius: '50%',\r\n                            width: '60px',\r\n                            height: ' 60px',\r\n                            position: 'absolute',\r\n                            boxShadow: '0px 0px 28px #90caf9',\r\n                            ...boxShadowAnimation,\r\n                        }}\r\n                    />\r\n                <animated.div\r\n                        style={{\r\n                            opacity: 0,\r\n                            ...streamersAnimation\r\n                        }}\r\n                    >\r\n                    <Streamers />\r\n                </animated.div>\r\n                <IconButton\r\n                        onClick={handleAddedClap}\r\n                        aria-label=\"thumb up\"\r\n                        color=\"primary\"\r\n                        sx={{ border: '1px solid', width: '60px', height: '60px', backgroundColor: '#ffffff' }}>\r\n                    <ThumbUpIcon />\r\n                </IconButton>\r\n            </Stack>\r\n        </DisplayLayout>);\r\n}\r\n\r\nexport default MediumClapHooks;","import { useSpring } from '@react-spring/web';\r\nimport { useState } from 'react';\r\n\r\nconst useClapAnimation = () => {\r\n    const [isHover, setIsHover] = useState(false);\r\n\r\n    const boxShadowAnimation = useSpring({\r\n        from: { opacity: isHover ? 0 : 1, transition: 'ease' },\r\n        to: [{ opacity: isHover ? 1 : 0 }],\r\n        loop: isHover,\r\n        config: { duration: 1_000 },\r\n    });\r\n    const [clapAddedAnimation, clapAddedApi] = useSpring(() => ({\r\n    }));\r\n    const [streamersAnimation, streamersApi] = useSpring(() => ({}));\r\n\r\n    return { boxShadowAnimation, clapAddedAnimation, clapAddedApi, streamersAnimation, streamersApi, setIsHover }\r\n}\r\n\r\nexport default useClapAnimation;","import { useState } from 'react';\r\n\r\nconst useClapsCount = () => {\r\n    const [addedClap, setAddedClap] = useState(0);\r\n    const [totalClap, setTotalClap] = useState(200);\r\n\r\n    return { addedClap, setAddedClap, totalClap, setTotalClap }\r\n}\r\n\r\nexport default useClapsCount;","import { FunctionComponent, PropsWithChildren } from 'react';\r\nimport { animated } from '@react-spring/web';\r\n\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Stack from '@mui/material/Stack';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nimport useClapAnimation from './useClapAnimation';\r\nimport useClapsCount from './useClapsCount';\r\n\r\nimport DisplayLayout from '../DisplayLayout';\r\nimport Streamers from '../Streamers';\r\n\r\ninterface ClapContainerProps {\r\n    handleClick: () => void;\r\n}\r\n\r\nconst ClapContainer: FunctionComponent<PropsWithChildren<ClapContainerProps>> = ({ children, handleClick, ...props }) => (\r\n    <IconButton\r\n                        onClick={handleClick}\r\n                        aria-label=\"thumb up\"\r\n                        color=\"primary\"\r\n                        sx={{ border: '1px solid', width: '60px', height: '60px', backgroundColor: '#ffffff' }}\r\n                        {...props}>\r\n        {children}\r\n    </IconButton>\r\n    )\r\n\r\nconst PropsCollection: FunctionComponent = () => {\r\n    const { clapAddedAnimation, boxShadowAnimation, streamersAnimation, setIsHover, clapAddedApi, streamersApi } = useClapAnimation();\r\n    const { addedClap, totalClap, setAddedClap, setTotalClap } = useClapsCount();\r\n\r\n    const handleAddedClap = () => {\r\n        if (addedClap < 50) {\r\n            clapAddedApi.start({\r\n                from: { opacity: 2, transform: 'translate(0px, 10px)', transition: 'ease-in-out', transitionDelay: '2500' },\r\n                to: { opacity: 0, transform: 'translate(0px, -100px)' },\r\n                config: { duration: 700 },\r\n            });\r\n            streamersApi.start({\r\n                from: { opacity: 10, transform: 'scale(0)' },\r\n                to: { opacity: 0, transform: 'scale(1)' }\r\n            });\r\n            setAddedClap(addedClap + 1);\r\n            setTotalClap(totalClap + 1);\r\n        }\r\n    };\r\n\r\n    const clapContainerProps = {\r\n        'aria-valuenow': totalClap,\r\n        'aria-valuemax': 50\r\n    }\r\n\r\n    return (\r\n        <DisplayLayout chipLabel='Props Collection 🔡'>\r\n            <animated.div\r\n                    style={{\r\n                        position: 'relative',\r\n                        opacity: 0,\r\n                        ...clapAddedAnimation\r\n                    }}\r\n                >\r\n                <IconButton sx={{\r\n                        padding: '20px',\r\n                        backgroundColor: '#90caf9',\r\n                        width: '20px',\r\n                        height: '20px',\r\n                    }}>\r\n                    <Typography variant=\"body2\">{`+${addedClap}`}</Typography>\r\n                </IconButton>\r\n            </animated.div>\r\n            <Typography variant=\"body2\" color=\"primary\" sx={{ position: 'absolute', top: '6px' }}>{totalClap}</Typography>\r\n            <Stack \r\n                    onMouseEnter={() => setIsHover(true)}\r\n                    onMouseLeave={() => setIsHover(false)}\r\n                    sx={{\r\n                        position: 'absolute'\r\n                    }}\r\n                >\r\n                <animated.div\r\n                        style={{\r\n                            borderRadius: '50%',\r\n                            width: '60px',\r\n                            height: ' 60px',\r\n                            position: 'absolute',\r\n                            boxShadow: '0px 0px 28px #90caf9',\r\n                            ...boxShadowAnimation,\r\n                        }}\r\n                    />\r\n                <animated.div\r\n                        style={{\r\n                            opacity: 0,\r\n                            ...streamersAnimation\r\n                        }}\r\n                    >\r\n                    <Streamers />\r\n                </animated.div>\r\n                <ClapContainer handleClick={handleAddedClap} {...clapContainerProps} >\r\n                    <Typography variant='body1'>Thumb UP</Typography>\r\n                </ClapContainer>\r\n            </Stack>\r\n        </DisplayLayout>);\r\n}\r\n\r\nexport default PropsCollection;","import { FunctionComponent } from 'react';\r\n\r\nconst circleStyles = {\r\n    borderRadius: '50%',\r\n    backgroundColor: 'gray',\r\n    width: '5px',\r\n    height: '5px',\r\n}\r\n\r\nconst triangleStyles = {\r\n    width: 0,\r\n    height: 0,\r\n    borderStyle: 'solid',\r\n}\r\n\r\nconst Streamers: FunctionComponent = () => (\r\n    <div style={{ position: 'absolute' }}>\r\n        <div \r\n            style={{\r\n                position: 'absolute',\r\n                left: '60px',\r\n                ...circleStyles\r\n            }}\r\n        />\r\n        <div \r\n            style={{\r\n                borderWidth: '7px 0 0 7px',\r\n                borderColor: 'transparent transparent transparent #ff0033',\r\n                position: 'absolute',\r\n                top: '-15px',\r\n                left: '75px',\r\n                ...triangleStyles\r\n            }} \r\n        />\r\n        <div \r\n            style={{\r\n                position: 'absolute',\r\n                top: '35px',\r\n                left: '70px',\r\n                ...circleStyles\r\n            }}\r\n        />\r\n        <div \r\n            style={{\r\n                borderWidth: '7px 7px 0 0',\r\n                borderColor: '#ff0033 transparent transparent transparent',\r\n                position: 'absolute',\r\n                top: '45px',\r\n                left: '85px',\r\n                ...triangleStyles\r\n            }} \r\n        />\r\n        <div \r\n            style={{\r\n                position: 'absolute',\r\n                top: '70px',\r\n                left: '30px',\r\n                ...circleStyles\r\n            }}\r\n        />\r\n        <div \r\n            style={{\r\n                borderWidth: '0 3.5px 7px 3.5px',\r\n                borderColor: 'transparent transparent #ff0033 transparent',\r\n                position: 'absolute',\r\n                top: '85px',\r\n                left: '30px',\r\n                ...triangleStyles\r\n            }} \r\n        />\r\n        <div \r\n            style={{\r\n                position: 'absolute',\r\n                top: '45px',\r\n                left: '-10px',\r\n                ...circleStyles\r\n            }}\r\n        />\r\n        <div \r\n            style={{\r\n                borderWidth: '0 7px 7px 0',\r\n                borderColor: 'transparent #ff0033 transparent transparent',\r\n                position: 'absolute',\r\n                top: '55px',\r\n                left: '-25px',\r\n                ...triangleStyles\r\n            }} \r\n        />\r\n        <div \r\n            style={{\r\n                position: 'absolute',\r\n                top: '0px',\r\n                left: '-5px',\r\n                ...circleStyles\r\n            }}\r\n        />\r\n        <div \r\n            style={{\r\n                borderWidth: '0 0 7px 7px',\r\n                borderColor: 'transparent transparent #ff0033 transparent',\r\n                position: 'absolute',\r\n                top: '-11px',\r\n                left: '-20px',\r\n                ...triangleStyles\r\n            }} \r\n        />\r\n    </div>\r\n    )\r\n\r\nexport default Streamers;    ","import { FunctionComponent } from \"react\";\r\n\r\nimport Stack from '@mui/material/Stack';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nimport ComparisonSection from \"../components/ComparisonSection\";\r\nimport MultipleCustomHooks from \"../components/MultipleCustomHooks\";\r\nimport PropsCollection from \"../components/PropsCollection\";\r\n\r\nconst PropsCollectionPage: FunctionComponent = () => (\r\n    <Stack spacing={2}>\r\n        <Typography variant='h4'>Props Collection</Typography>\r\n        <Typography variant='body1'>\r\n            We can use this technique to allow users use their own UI with our clap animation logics.\r\n        </Typography>\r\n        <ComparisonSection\r\n            beforeComponent={<MultipleCustomHooks />}\r\n            beforeSourceCode=\"https://github.com/12cassie34/react-design-pattern-with-medium-clap/tree/main/src/components/MultipleCustomHooks\"\r\n            afterComponent={<PropsCollection />}\r\n            afterSourceCode=\"https://github.com/12cassie34/react-design-pattern-with-medium-clap/tree/main/src/components/PropsCollection\"\r\n        />\r\n    </Stack>\r\n)\r\n\r\nexport default PropsCollectionPage;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M1 21h4V9H1v12zm22-11c0-1.1-.9-2-2-2h-6.31l.95-4.57.03-.32c0-.41-.17-.79-.44-1.06L14.17 1 7.59 7.59C7.22 7.95 7 8.45 7 9v10c0 1.1.9 2 2 2h9c.83 0 1.54-.5 1.84-1.22l3.02-7.05c.09-.23.14-.47.14-.73v-2z\"\n}), 'ThumbUp');\nexports.default = _default;"],"names":["_ref","beforeComponent","beforeSourceCode","afterComponent","afterSourceCode","_jsxs","Grid","container","spacing","children","item","_jsx","Typography","onClick","window","open","sx","color","fontWeight","cursor","textDecoration","variant","chipLabel","Paper","padding","width","backgroundColor","Chip","label","display","marginBottom","Stack","alignItems","position","_useState","useState","_useState2","_slicedToArray","isHover","setIsHover","boxShadowAnimation","useSpring","from","opacity","transition","to","loop","config","duration","_useSpring","_useSpring2","clapAddedAnimation","clapAddedApi","_useSpring3","_useSpring4","streamersAnimation","streamersApi","addedClap","setAddedClap","_useState3","_useState4","totalClap","setTotalClap","_useClapAnimation","useClapAnimation","_useClapsCount","useClapsCount","DisplayLayout","animated","style","_objectSpread","IconButton","height","concat","top","onMouseEnter","onMouseLeave","borderRadius","boxShadow","Streamers","start","transform","transitionDelay","border","ThumbUpIcon","ClapContainer","handleClick","props","_objectWithoutProperties","_excluded","clapContainerProps","circleStyles","triangleStyles","borderStyle","left","borderWidth","borderColor","ComparisonSection","MultipleCustomHooks","PropsCollection","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}